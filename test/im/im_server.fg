import '../mesh'    # shared mesh logic
import '../sync/sync'    # shared sync logic
import 'im'


id = 'server'


ImClient = [

    'id' : id,

    'init' : function(self, id, port, Mesh) # set online to false for all contacts at first

        self.accounts = sys.load('accounts') or []
        sys.print('accounts=' + self.accounts)

        mesh = Mesh.init(id, port, [self])
        self.mesh = mesh
        mesh.listen()
        sys.loop()

    end,

    'disconnected' : function(self, socket, id)
        #self.mesh.print('handle_disconnect ' + id)
        mc3 = ['event' : 'online', 'from' : id, 'online':false]
        self.mesh.broadcast(mc3)
    end,

    'handle_message' : function(self, socket, ms1)

        if ms1.event == 'signup' then
            return self.handle_signup(ms1)
        else if ms1.event == 'signin' then
            return self.handle_signin(ms1)
        else if ms1.event == 'contacts' then
            return self.handle_contacts(ms1)
        end
    end,

    'handle_contacts' : function(self, msf)
        sys.print('handle_contacts ' + msf)
        self.accounts[msf.from].contacts = msf.contacts
        self.save_accounts()
        return self.roster(msf.from) + ['event':'contacts']
    end,

    # contacts plus online status
    'roster' : function(self, to)
        contacts = self.accounts[to].contacts
        online = self.mesh.peers
        online_contacts = [c for c in contacts where online[c]]
        return ['contacts':contacts, 'online':online_contacts]
    end,

    'handle_signup' : function(self, ms2)
        if (self.accounts[ms2.from]) then
            return ['event' : 'signin', 'result' : false]
        else
            self.accounts[ms2.from] = ['password' : ms2.password ]
        end

        self.save_accounts()

        self.inform_others(ms2.from)

        return ['event' : 'signin', 'result' : true]
    end,

    # save username, passwords, contacts, but don't save who's online
    'save_accounts' : function(self)
        sys.save(self.accounts, 'accounts')
    end,

    'handle_signin' : function(self, ms3)

        from = ms3.from
        result = (self.accounts[from].password == ms3.password)
        if result then
            roster = self.roster(from) # contacts with online status
        else
            roster = []
        end

        self.inform_others(from)

        return ['event' : 'signin', 'result' : result] + roster
    end,

    # tell everyone this guy came online
    'inform_others' : function(self, from)

        ms3b = ['event' : 'online', 'from' : from, 'online':true]
        self.mesh.broadcast(ms3b, nil, from)

    end,

]

im = ImClient.init(id, port, Mesh)
